{"version":3,"sources":["layout/LayoutCalculator.js","PhotoGrid.js","App.js","serviceWorker.js","index.js"],"names":["LayoutCalculator","photos","optimalHeight","viewportWidth","Object","classCallCheck","this","normalizePhotos","map","photo","height","width","copy","assign","parentIdx","parentCost","visited","costs","shortestPath","indicesQueue","costsQueue","currentWidth","currentIdx","length","currentHeight","currentCost","Math","pow","push","undefined","shift","generateSplitDAG","Infinity","shortestPaths","rows","row","unscaledWidth","currentRowIdx","i","unshift","PhotoGrid","_this$props","props","size","margin","calculate","react_default","a","createElement","className","rowIdx","scalingRatio","remainingWidth","key","idx","calculatedWidth","round","src","alt","style","Component","defaultProps","withSize","App","src_PhotoGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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Z,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,mBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,qBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,KAEZ,CACI+C,IAAK,oBACL9C,MAAO,IACPD,OAAQ,MAMmBR,cAAe,cArRxC0D,aCSEK,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAAQC,SAASC,eAAe,SDuHxC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC","file":"static/js/main.1d69ba5b.chunk.js","sourcesContent":["class LayoutCalculator {\n\n    constructor(photos, optimalHeight, viewportWidth) {\n        this.photos = this.normalizePhotos(photos, optimalHeight);\n        this.optimalHeight = optimalHeight;\n        this.viewportWidth = viewportWidth;\n    }\n\n    normalizePhotos(photos, optimalHeight) {\n        return photos.map(photo => {\n                const height = optimalHeight;\n                const width = photo.width * (height / photo.height);\n                const copy = Object.assign({}, photo);\n                return Object.assign(copy, {width: width, height: height});\n            }\n        );\n    }\n\n    generateSplitDAG(parentIdx, parentCost, visited, costs, shortestPath, indicesQueue, costsQueue) {\n        let currentWidth = 0;\n        let currentIdx = parentIdx;\n        while (++currentIdx < this.photos.length) {\n            // get photo\n            const photo = this.photos[currentIdx];\n\n            // calculate height, width and cost\n            currentWidth += photo.width;\n            const currentHeight = (this.viewportWidth / currentWidth) * photo.height;\n            const currentCost = parentCost + Math.pow(currentHeight - this.optimalHeight, 2);\n\n            // continue if row height is too big\n            if (this.optimalHeight * 2 < currentHeight) continue;\n\n            // break if row is too small\n            if (this.optimalHeight / 2 > currentHeight) break;\n\n            if (costs[currentIdx] > currentCost) {\n                costs[currentIdx] = currentCost;\n                shortestPath[currentIdx] = parentIdx;\n            }\n\n            if (!visited[currentIdx]) {\n                indicesQueue.push(currentIdx);\n                costsQueue.push(currentCost);\n                visited[currentIdx] = true;\n            }\n        }\n\n        while ((currentIdx = indicesQueue.shift()) !== undefined) {\n            const currentCost = costsQueue.shift();\n            this.generateSplitDAG(currentIdx, currentCost, visited, costs, shortestPath, indicesQueue, costsQueue);\n        }\n    }\n\n    calculate() {\n        const visited = this.photos.map(() => false);\n        const costs = this.photos.map(() => Infinity);\n        const shortestPaths = this.photos.map(() => undefined);\n        const indicesQueue = [];\n        const costsQueue = [];\n        this.generateSplitDAG(-1, 0, visited, costs, shortestPaths, indicesQueue, costsQueue);\n\n        const rows = [];\n\n        let row = {photos: [], unscaledWidth: 0};\n        let currentRowIdx = shortestPaths[shortestPaths.length - 1];\n\n        for (let i = shortestPaths.length - 1; i >= 0; i--) {\n            if ((currentRowIdx === i || currentRowIdx === undefined) && row.photos.length > 0) {\n                rows.unshift(row);\n                row = {photos: [], unscaledWidth: 0};\n                currentRowIdx = shortestPaths[i];\n            }\n            row.photos.unshift(this.photos[i]);\n            row.unscaledWidth += this.photos[i].width;\n        }\n\n        if (row.photos.length > 0) {\n            rows.unshift(row);\n        }\n\n        return rows;\n    }\n}\n\nexport default LayoutCalculator;","import React, {Component} from 'react';\nimport LayoutCalculator from \"./layout/LayoutCalculator\";\nimport PropTypes from 'prop-types';\nimport {withSize} from 'react-sizeme';\nimport './Photogrid.css';\n\nclass PhotoGrid extends Component {\n\n    render() {\n        const {photos, optimalHeight, size, margin} = this.props;\n        const viewportWidth = size.width;\n        const rows = new LayoutCalculator(photos, optimalHeight, viewportWidth).calculate();\n        return (\n            <div className=\"PhotoGrid\">\n                {rows.map((row, rowIdx) => {\n                        const scalingRatio = viewportWidth / row.unscaledWidth;\n                        let remainingWidth = viewportWidth;\n                        return (\n                            <div key={rowIdx} className=\"Row\">\n                                {row.photos.map((photo, idx) => {\n                                        let calculatedWidth = Math.round(photo.width * scalingRatio);\n                                        let width;\n                                        if (idx === row.photos.length - 1) {\n                                            width = remainingWidth;\n                                        } else {\n                                            width = calculatedWidth;\n                                        }\n                                        const height = Math.round(photo.height * scalingRatio);\n                                        remainingWidth -= width;\n                                        return (\n                                            <img key={photo.src}\n                                                 alt={photo.src}\n                                                 src={photo.src}\n                                                 width={width - 2 * margin}\n                                                 height={height - 2 * margin}\n                                                 style={{margin: margin}}/>\n                                        );\n                                    }\n                                )}\n                            </div>\n                        );\n                    }\n                )}\n            </div>);\n    }\n}\n\nPhotoGrid.defaultProps = {\n    margin: 2,\n};\n\nPhotoGrid.propTypes = {\n    photos: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string.isRequired,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n    })),\n    optimalHeight: PropTypes.number.isRequired,\n    margin: PropTypes.number,\n};\n\nexport default withSize()(PhotoGrid);\n","import React, {Component} from 'react';\nimport PhotoGrid from './PhotoGrid';\n\nclass App extends Component {\n    render() {\n        const photos = [\n            {\n                src: 'images/bcn/1.jpeg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/2.jpeg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/3.jpeg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/4.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/5.jpeg',\n                width: 640,\n                height: 959,\n            },\n            {\n                src: 'images/bcn/6.jpeg',\n                width: 640,\n                height: 423,\n            },\n            {\n                src: 'images/bcn/7.jpeg',\n                width: 640,\n                height: 960,\n            },\n            {\n                src: 'images/bcn/8.jpeg',\n                width: 640,\n                height: 360,\n            },\n            {\n                src: 'images/bcn/9.jpeg',\n                width: 640,\n                height: 360,\n            },\n            {\n                src: 'images/bcn/10.jpeg',\n                width: 640,\n                height: 480,\n            },\n            {\n                src: 'images/bcn/11.jpeg',\n                width: 640,\n                height: 853,\n            },\n            {\n                src: 'images/bcn/12.jpeg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/13.jpeg',\n                width: 640,\n                height: 428,\n            },\n            {\n                src: 'images/bcn/14.jpeg',\n                width: 640,\n                height: 480,\n            },\n            {\n                src: 'images/bcn/15.jpeg',\n                width: 640,\n                height: 854,\n            },\n            {\n                src: 'images/bcn/16.jpeg',\n                width: 640,\n                height: 468,\n            },\n            {\n                src: 'images/bcn/17.jpeg',\n                width: 640,\n                height: 959,\n            },\n            {\n                src: 'images/bcn/18.jpeg',\n                width: 640,\n                height: 423,\n            },\n            {\n                src: 'images/bcn/19.jpeg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/20.jpg',\n                width: 640,\n                height: 326,\n            },\n            {\n                src: 'images/bcn/21.jpg',\n                width: 640,\n                height: 452,\n            },\n            {\n                src: 'images/bcn/22.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/23.jpg',\n                width: 640,\n                height: 428,\n            },\n            {\n                src: 'images/bcn/24.jpg',\n                width: 480,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/25.jpg',\n                width: 480,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/26.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/27.jpg',\n                width: 640,\n                height: 427,\n            },\n            {\n                src: 'images/bcn/28.jpg',\n                width: 640,\n                height: 292,\n            },\n            {\n                src: 'images/bcn/29.jpg',\n                width: 640,\n                height: 427,\n            },\n            {\n                src: 'images/bcn/30.jpg',\n                width: 640,\n                height: 446,\n            },\n            {\n                src: 'images/bcn/31.jpg',\n                width: 640,\n                height: 428,\n            },\n            {\n                src: 'images/bcn/32.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/33.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/34.jpg',\n                width: 640,\n                height: 427,\n            },\n            {\n                src: 'images/bcn/35.jpg',\n                width: 640,\n                height: 360,\n            },\n            {\n                src: 'images/bcn/36.jpg',\n                width: 640,\n                height: 324,\n            },\n            {\n                src: 'images/bcn/37.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/38.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/39.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/40.jpg',\n                width: 426,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/41.jpg',\n                width: 498,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/42.jpg',\n                width: 640,\n                height: 442,\n            },\n            {\n                src: 'images/bcn/43.jpg',\n                width: 640,\n                height: 435,\n            },\n            {\n                src: 'images/bcn/44.jpg',\n                width: 640,\n                height: 480,\n            },\n            {\n                src: 'images/bcn/45.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/46.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/47.jpg',\n                width: 480,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/48.jpg',\n                width: 480,\n                height: 640,\n            },\n            {\n                src: 'images/bcn/49.jpg',\n                width: 640,\n                height: 535,\n            },\n            {\n                src: 'images/bcn/50.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/51.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/52.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/53.jpg',\n                width: 640,\n                height: 426,\n            },\n            {\n                src: 'images/bcn/54.jpg',\n                width: 640,\n                height: 480,\n            },\n        ];\n\n        return (\n            <div className=\"App\">\n                <PhotoGrid photos={photos} optimalHeight={400}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}